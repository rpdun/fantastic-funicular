name: Playit RDP Tunnel

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5  # Give some time for the download to complete

    - name: Download and Install Cursor
      run: |
        # Download Cursor
        Invoke-WebRequest -Uri "https://downloader.cursor.sh/windows/nsis/x64" -OutFile "$env:USERPROFILE\Cursor Setup 0.43.6 - x64.exe"
        
        # Install Cursor
        Start-Process -FilePath "$env:USERPROFILE\Cursor Setup 0.43.6 - x64.exe" -ArgumentList "/S" -NoNewWindow -Wait  # /S for silent install
        
        Start-Sleep -Seconds 5  # Give some time for the installation to complete

        # Create "Cursor" folder on Desktop
        $desktopPath = [Environment]::GetFolderPath('Desktop')
        $cursorFolderPath = Join-Path -Path $desktopPath -ChildPath "Cursor"
        if (-not (Test-Path -Path $cursorFolderPath)) {
          New-Item -Path $cursorFolderPath -ItemType Directory
        }
        
        # Create "test.java" file inside the "Cursor" folder
        $testJavaFilePath = Join-Path -Path $cursorFolderPath -ChildPath "test.java"
        if (-not (Test-Path -Path $testJavaFilePath)) {
          Add-Content -Path $testJavaFilePath -Value "// This is a test Java file created by GitHub Actions"
        }

    - name: Disable Windows Defender Credential Guard
      run: |
        # Disable Credential Guard
        Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Lsa' -Name 'LsaCfgFlags' -Value 0
        Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All -NoRestart

        # Reboot system
        Write-Output "Rebooting to apply changes..."
        shutdown /r /t 5

    - name: Wait for System Reboot
      run: |
        Start-Sleep -Seconds 120  # Adjust the delay to ensure reboot is complete

    # Default, optional.
    - name: Enable TS
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "p@ssw0rd!" -Force)

    - name: Start Playit and Set Up RDP Tunnel
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }} 
      run: |
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow -Wait
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -NoNewWindow

    - name: Keep the GitHub Action Runner Alive
      run: |
          Start-Sleep -Seconds 11800  # Adjust the duration based on your needs
